package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        <style>\n");
      out.write("            #chartdiv {\n");
      out.write("                width: 100%;\n");
      out.write("                height: 500px;\n");
      out.write("            }      \n");
      out.write("        </style>\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <script src=\"https://www.amcharts.com/lib/3/amcharts.js\"></script>\n");
      out.write("        <script src=\"https://www.amcharts.com/lib/3/serial.js\"></script>\n");
      out.write("        <script src=\"https://www.amcharts.com/lib/3/themes/light.js\"></script>\n");
      out.write("        <script src=\"https://www.amcharts.com/lib/3/amstock.js\"></script>\n");
      out.write("        <div id=\"chartdiv\"></div> \n");
      out.write("        \n");
      out.write("        <script>\n");
      out.write("            var chartData = [],\n");
      out.write("  guides1 = [],\n");
      out.write("  guides2 = [],\n");
      out.write("  guides3 = [],\n");
      out.write("  guides4 = [];\n");
      out.write("generateChartData();\n");
      out.write("\n");
      out.write("\n");
      out.write("function generateChartData() {\n");
      out.write("  var firstDate = new Date();\n");
      out.write("  firstDate.setHours( 0, 0, 0, 0 );\n");
      out.write("  firstDate.setDate( firstDate.getDate() - 2000 );\n");
      out.write("\n");
      out.write("  for ( var i = 0; i < 2000; i++ ) {\n");
      out.write("    var newDate = new Date( firstDate );\n");
      out.write("    newDate.setSeconds( newDate.getSeconds() + i );\n");
      out.write("    chartData[ i ] = ( {\n");
      out.write("      \"date\": newDate,\n");
      out.write("      \"ecg1\": Math.round( Math.random() * 1000 ),\n");
      out.write("      \"ecg2\": Math.round( Math.random() * 1000 ),\n");
      out.write("      \"ecg3\": Math.round( Math.random() * 1000 ),\n");
      out.write("      \"ecg4\": Math.round( Math.random() * 1000 )\n");
      out.write("    } );\n");
      out.write("    if ( i == 500 ) {\n");
      out.write("      guides1.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"aVR\"\n");
      out.write("      } );\n");
      out.write("      guides2.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"aVL\"\n");
      out.write("      } );\n");
      out.write("      guides3.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"aVF\"\n");
      out.write("      } );\n");
      out.write("    }\n");
      out.write("    else if ( i == 1000 ) {\n");
      out.write("      guides1.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"V1\"\n");
      out.write("      } );\n");
      out.write("      guides2.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"V2\"\n");
      out.write("      } );\n");
      out.write("      guides3.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"V3\"\n");
      out.write("      } );\n");
      out.write("    }\n");
      out.write("    else if ( i == 1500 ) {\n");
      out.write("      guides1.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"V4\"\n");
      out.write("      } );\n");
      out.write("      guides2.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"V5\"\n");
      out.write("      } );\n");
      out.write("      guides3.push( {\n");
      out.write("        \"date\": newDate,\n");
      out.write("        \"lineColor\": \"#880063\",\n");
      out.write("        \"lineThickness\": 2,\n");
      out.write("        \"lineAlpha\": 1,\n");
      out.write("        \"label\": \"V6\"\n");
      out.write("      } );\n");
      out.write("    }\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("var chart = AmCharts.makeChart( \"chartdiv\", {\n");
      out.write("  \"type\": \"stock\",\n");
      out.write("  \"theme\": \"light\",\n");
      out.write("\n");
      out.write("  \"dataSets\": [ {\n");
      out.write("    \"fieldMappings\": [ {\n");
      out.write("      \"fromField\": \"ecg1\",\n");
      out.write("      \"toField\": \"ecg1\"\n");
      out.write("    }, {\n");
      out.write("      \"fromField\": \"ecg2\",\n");
      out.write("      \"toField\": \"ecg2\"\n");
      out.write("    }, {\n");
      out.write("      \"fromField\": \"ecg3\",\n");
      out.write("      \"toField\": \"ecg3\"\n");
      out.write("    }, {\n");
      out.write("      \"fromField\": \"ecg4\",\n");
      out.write("      \"toField\": \"ecg4\"\n");
      out.write("    }, {\n");
      out.write("      \"fromField\": \"ecg5\",\n");
      out.write("      \"toField\": \"ecg5\"\n");
      out.write("    }, {\n");
      out.write("      \"fromField\": \"ecg6\",\n");
      out.write("      \"toField\": \"ecg6\"\n");
      out.write("    } ],\n");
      out.write("    \"color\": \"#000\",\n");
      out.write("    \"dataProvider\": chartData,\n");
      out.write("    \"categoryField\": \"date\"\n");
      out.write("  } ],\n");
      out.write("\n");
      out.write("\n");
      out.write("  \"panels\": [ {\n");
      out.write("    \"title\": \"I\",\n");
      out.write("    \"showCategoryAxis\": true,\n");
      out.write("    \"stockGraphs\": [ {\n");
      out.write("      \"id\": \"g1\",\n");
      out.write("      \"title\": \"ECG #1\",\n");
      out.write("      \"valueField\": \"ecg1\",\n");
      out.write("      \"showBalloon\": true\n");
      out.write("    } ],\n");
      out.write("    \"guides\": guides1\n");
      out.write("  }, {\n");
      out.write("    \"title\": \"II\",\n");
      out.write("    \"showCategoryAxis\": true,\n");
      out.write("    \"stockGraphs\": [ {\n");
      out.write("      \"title\": \"ECG #2\",\n");
      out.write("      \"valueField\": \"ecg2\",\n");
      out.write("      \"showBalloon\": true\n");
      out.write("    } ],\n");
      out.write("    \"guides\": guides2\n");
      out.write("  }, {\n");
      out.write("    \"title\": \"III\",\n");
      out.write("    \"showCategoryAxis\": true,\n");
      out.write("    \"stockGraphs\": [ {\n");
      out.write("      \"title\": \"ECG #3\",\n");
      out.write("      \"valueField\": \"ecg3\",\n");
      out.write("      \"showBalloon\": true\n");
      out.write("    } ],\n");
      out.write("    \"guides\": guides3\n");
      out.write("  }, {\n");
      out.write("    \"title\": \"IV\",\n");
      out.write("    \"showCategoryAxis\": true,\n");
      out.write("    \"stockGraphs\": [ {\n");
      out.write("      \"title\": \"ECG #4\",\n");
      out.write("      \"valueField\": \"ecg4\",\n");
      out.write("      \"showBalloon\": true\n");
      out.write("    } ],\n");
      out.write("    \"guides\": guides4\n");
      out.write("  } ],\n");
      out.write("\n");
      out.write("  \"chartScrollbarSettings\": {\n");
      out.write("    \"graph\": \"g1\",\n");
      out.write("    \"graphType\": \"line\",\n");
      out.write("    \"usePeriod\": \"mm\"\n");
      out.write("  },\n");
      out.write("\n");
      out.write("  \"categoryAxesSettings\": {\n");
      out.write("    \"minPeriod\": \"ss\",\n");
      out.write("    \"gridColor\": \"#ff9c9c\",\n");
      out.write("    \"gridAlpha\": 0.7,\n");
      out.write("    \"gridAlpha\": 1,\n");
      out.write("    \"axisAlpha\": 0,\n");
      out.write("    \"minorGridEnabled\": true,\n");
      out.write("    \"minorGridAlpha\": 0.4,\n");
      out.write("    \"labelsEnabled\": false,\n");
      out.write("    \"position\": \"top\"\n");
      out.write("  },\n");
      out.write("\n");
      out.write("  \"valueAxesSettings\": {\n");
      out.write("    \"gridColor\": \"#ff9c9c\",\n");
      out.write("    \"gridAlpha\": 0.7,\n");
      out.write("    \"axisAlpha\": 0,\n");
      out.write("    \"minorGridEnabled\": true,\n");
      out.write("    \"minorGridAlpha\": 0.4,\n");
      out.write("    \"labelsEnabled\": false\n");
      out.write("  },\n");
      out.write("\n");
      out.write("  \"chartCursorSettings\": {\n");
      out.write("    \"valueLineBalloonEnabled\": true,\n");
      out.write("    \"valueLineEnabled\": true\n");
      out.write("  }\n");
      out.write("} );\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
